{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dnyan\\\\Desktop\\\\Seminar_model\\\\fake_news_detection\\\\src\\\\Components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm() {\n  _s();\n  const [newsText, setNewsText] = useState('');\n  const [prediction, setPrediction] = useState('');\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmitText = async e => {\n    e.preventDefault();\n    if (!newsText.trim()) {\n      setError('Please enter news text.');\n      return;\n    }\n    setError('');\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/', {\n        text: newsText\n      });\n      setPrediction(response.data.prediction);\n    } catch (error) {\n      console.error('Error in prediction:', error.response ? error.response.data : error.message);\n      setError('Error in prediction. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Please select a file to upload.');\n      return;\n    }\n    setError('');\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5000/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setPrediction(response.data.prediction);\n    } catch (error) {\n      console.error('Error in file upload:', error.response ? error.response.data : error.message);\n      setError('Error in file upload. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fake News Detection System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitText,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newsText,\n        onChange: e => setNewsText(e.target.value),\n        placeholder: \"Enter news text here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Predict from Text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFileUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Predict from File'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Prediction: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadForm, \"/mvxqd7QVboQYm0a22gbbm/UeEA=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","newsText","setNewsText","prediction","setPrediction","file","setFile","loading","setLoading","error","setError","handleSubmitText","e","preventDefault","trim","response","post","text","data","console","message","handleFileUpload","formData","FormData","append","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","value","onChange","target","placeholder","type","disabled","files","_c","$RefreshReg$"],"sources":["C:/Users/dnyan/Desktop/Seminar_model/fake_news_detection/src/Components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './upload.css';\r\n\r\nfunction UploadForm() {\r\n    const [newsText, setNewsText] = useState('');\r\n    const [prediction, setPrediction] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmitText = async (e) => {\r\n        e.preventDefault();\r\n        if (!newsText.trim()) {\r\n            setError('Please enter news text.');\r\n            return;\r\n        }\r\n        setError('');\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/', { text: newsText });\r\n            setPrediction(response.data.prediction);\r\n        } catch (error) {\r\n            console.error('Error in prediction:', error.response ? error.response.data : error.message);\r\n            setError('Error in prediction. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleFileUpload = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) {\r\n            setError('Please select a file to upload.');\r\n            return;\r\n        }\r\n        setError('');\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            setPrediction(response.data.prediction);\r\n        } catch (error) {\r\n            console.error('Error in file upload:', error.response ? error.response.data : error.message);\r\n            setError('Error in file upload. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Fake News Detection System</h1>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            <form onSubmit={handleSubmitText}>\r\n                <textarea\r\n                    value={newsText}\r\n                    onChange={(e) => setNewsText(e.target.value)}\r\n                    placeholder=\"Enter news text here\"\r\n                />\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading...' : 'Predict from Text'}\r\n                </button>\r\n            </form>\r\n            <form onSubmit={handleFileUpload}>\r\n                <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading...' : 'Predict from File'}\r\n                </button>\r\n            </form>\r\n            {prediction && <h2>Prediction: {prediction}</h2>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadForm;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}