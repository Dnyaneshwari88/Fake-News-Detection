{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dnyan\\\\Desktop\\\\Seminar_model\\\\fake_news_detection\\\\src\\\\Components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm() {\n  _s();\n  const [newsText, setNewsText] = useState('');\n  const [prediction, setPrediction] = useState('');\n  const [file, setFile] = useState(null);\n  const handleSubmitText = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/', {\n        text: newsText\n      });\n      setPrediction(response.data.prediction);\n    } catch (error) {\n      console.error('Error in prediction', error);\n    }\n  };\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5000/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setPrediction(response.data.prediction);\n    } catch (error) {\n      console.error('Error in file upload', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fake News Detection System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitText,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newsText,\n        onChange: e => setNewsText(e.target.value),\n        placeholder: \"Enter news text here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict from Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFileUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict from File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Prediction: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadForm, \"figmNRzWpKvaKZM9kAmUlf/PX+s=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","newsText","setNewsText","prediction","setPrediction","file","setFile","handleSubmitText","e","preventDefault","response","post","text","data","error","console","handleFileUpload","formData","FormData","append","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","files","_c","$RefreshReg$"],"sources":["C:/Users/dnyan/Desktop/Seminar_model/fake_news_detection/src/Components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UploadForm() {\r\n    const [newsText, setNewsText] = useState('');\r\n    const [prediction, setPrediction] = useState('');\r\n    const [file, setFile] = useState(null);\r\n\r\n    const handleSubmitText = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/', { text: newsText });\r\n            setPrediction(response.data.prediction);\r\n        } catch (error) {\r\n            console.error('Error in prediction', error);\r\n        }\r\n    };\r\n\r\n    const handleFileUpload = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            setPrediction(response.data.prediction);\r\n        } catch (error) {\r\n            console.error('Error in file upload', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Fake News Detection System</h1>\r\n            <form onSubmit={handleSubmitText}>\r\n                <textarea\r\n                    value={newsText}\r\n                    onChange={(e) => setNewsText(e.target.value)}\r\n                    placeholder=\"Enter news text here\"\r\n                />\r\n                <button type=\"submit\">Predict from Text</button>\r\n            </form>\r\n            <form onSubmit={handleFileUpload}>\r\n                <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n                <button type=\"submit\">Predict from File</button>\r\n            </form>\r\n            {prediction && <h2>Prediction: {prediction}</h2>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}